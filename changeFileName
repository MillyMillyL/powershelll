###replace all white space in file name with hyphen
Get-ChildItem | %{  ren $_.FullName ($_.Name -replace '\s','-') }


### change file name to lowercase
Get-ChildItem -r | % { if ($_.Name -cne $_.Name.ToLower()) { ren $_.FullName $_.Name.ToLower() } }

### rename reclusively all files with first letter upper case (ignore directory)
Get-ChildItem -r | % { if(!((Get-Item $_.FullName) -is [System.IO.DirectoryInfo])) { ren $_.FullName ($_.Name.substring(0,1).toupper()+$_.Name.substring(1).tolower())}}
### rename directory with first letter upper case
Get-ChildItem | % { ren -Path $_.FullName -NewName ("A"+$_.Name.substring(0,1).toupper()+$_.Name.substring(1))}
Get-ChildItem | % { ren -Path $_.FullName -NewName ($_.Name.substring(1))}

### Get all file name
Get-ChildItem -File -Name

### get the paths of all the child items in a specific folder using PowerShell
$folderPath = "C:\Your\Folder\Path"
Get-ChildItem -Path $folderPath -Recurse | Select-Object -ExpandProperty FullName


### Rename all subdirectories and files in a directory (including its subdirectories and files) by replacing a specific string in their names
# Define the root directory
$rootDir = "C:\Path\To\Your\Directory"

# Define the string to replace and the replacement string
$stringToReplace = "oldString"
$replacementString = "newString"

# Function to rename items
function Rename-ItemRecursively {
    param (
        [string]$dir
    )
    
    # Get all directories and files in the current directory
    $items = Get-ChildItem -Path $dir -Recurse
    
    foreach ($item in $items) {
        # Skip if item is not a file or directory
        if (-not ($item.PSIsContainer -or $item -is [System.IO.FileInfo])) {
            continue
        }

        # Construct the new name by replacing the specified string
        $newName = $item.Name -replace [regex]::Escape($stringToReplace), $replacementString

        if ($newName -ne $item.Name) {
            # Determine the new full path
            $newPath = Join-Path -Path $item.DirectoryName -ChildPath $newName
            
            # Rename the item
            Rename-Item -Path $item.FullName -NewName $newPath
        }
    }
}

# Call the function to start renaming
Rename-ItemRecursively -dir $rootDir


### bulk rename subdirectories in PowerShell by specifying new names one by one

Create a CSV file (rename-mapping.csv) with two columns: OldName and NewName. This file should look like this:

csv
OldName,NewName
SubDir1,NewSubDir1
SubDir2,NewSubDir2
SubDir3,NewSubDir3

Use the following PowerShell script:

# Path to the CSV file containing the rename mapping
$csvPath = ".\rename-mapping.csv"

# Import the CSV file
$renameMapping = Import-Csv -Path $csvPath

# Loop through each mapping and rename the subdirectories
foreach ($mapping in $renameMapping) {
    $oldSubDirPath = Get-Item -Path $mapping.OldName
    $newSubDirPath = $mapping.NewName

    if (Test-Path -Path $oldSubDirPath) {
        Rename-Item -Path $oldSubDirPath -NewName $newSubDirPath
        Write-Output "Renamed '$($mapping.OldName)' to '$($mapping.NewName)'"
    } else {
        Write-Output "Directory '$($mapping.OldName)' does not exist."
    }
}
